group 'io.kweb'
version '0.2.33'

buildscript {
    ext.kotlin_version = '1.3.61'
    ext.dokka_version = '0.9.18'

    repositories {
        jcenter()
        mavenCentral()
        maven {
            url "https://dl.bintray.com/wasabifx/wasabifx"
        }
        maven {
            url "http://dl.bintray.com/cy6ergn0m/maven"
        }
        maven { url 'https://jitpack.io' }
        maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }

    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.3.0'
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.20.0'
    }

}

apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.dokka'
apply plugin: "info.solidsoft.pitest"
apply plugin: "com.github.ben-manes.versions"

repositories {
    mavenCentral()
    maven {
        url "https://dl.bintray.com/wasabifx/wasabifx"
    }
    maven {
        url "http://dl.bintray.com/cy6ergn0m/maven"
    }
    maven { url 'https://jitpack.io' }
    maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }

}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile 'com.github.salomonbrys.kotson:kotson:2.5.0'
    compile 'com.google.guava:guava:27.1-jre'
    compile 'net.incongru.watchservice:barbary-watchservice:1.0'
    compile 'com.fatboyindustrial.gson-javatime-serialisers:gson-javatime-serialisers:1.1.1'
    implementation 'org.lmdbjava:lmdbjava:0.7.0'

    testCompile 'io.kotlintest:kotlintest:2.0.7'
}
/*
task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'html'
    outputDirectory = javadoc.destinationDir
    inputs.dir 'src/main/kotlin'
    samples = ["src/main/kotlin/com/github/sanity/shoebox/samples/samples.kt"]
    includes = ['packages.md']
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}
*/
pitest {
    targetClasses = ['com.github.sanity.shoebox.*']  //by default "${project.group}.*"
    threads = 8
    outputFormats = ['HTML']
    jvmArgs = ['-Xmx1024m']
}
/*
artifacts {
    archives javadocJar
}
 */